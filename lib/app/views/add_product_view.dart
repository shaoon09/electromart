import 'package:flutter/material.dart';
import 'package:get/get.dart';
import '../controllers/product_controller.dart';
import '../models/product.dart';

class AddProductView extends StatelessWidget {
  final ProductController productController = Get.find<ProductController>();

  // Form field controllers
  final TextEditingController nameController = TextEditingController();
  final TextEditingController descriptionController = TextEditingController();
  final TextEditingController priceController = TextEditingController();
  final TextEditingController imageUrlController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Add Product'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            TextField(
              controller: nameController,
              decoration: const InputDecoration(labelText: 'Product Name'),
            ),
            const SizedBox(height: 10),
            TextField(
              controller: descriptionController,
              decoration: const InputDecoration(labelText: 'Product Description'),
            ),
            const SizedBox(height: 10),
            TextField(
              controller: priceController,
              keyboardType: TextInputType.number,
              decoration: const InputDecoration(labelText: 'Product Price'),
            ),
            const SizedBox(height: 10),
            TextField(
              controller: imageUrlController,
              decoration: const InputDecoration(labelText: 'Image URL'),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                final String name = nameController.text.trim();
                final String description = descriptionController.text.trim();
                final String priceText = priceController.text.trim();
                final String imageUrl = imageUrlController.text.trim();

                // Validate input fields
                if (name.isEmpty ||
                    description.isEmpty ||
                    priceText.isEmpty ||
                    imageUrl.isEmpty) {
                  Get.snackbar('Error', 'All fields are required!');
                  return;
                }

                final double? price = double.tryParse(priceText);
                if (price == null || price <= 0) {
                  Get.snackbar('Error', 'Invalid price value!');
                  return;
                }

                // Create a Product object
                final Product newProduct = Product(
                  id: '', // ID is auto-generated by Firebase
                  name: name,
                  description: description,
                  price: price,
                  imageUrl: imageUrl,
                );

                // Add product using the controller
                productController.addProduct(newProduct).then((_) {
                  Get.back(); // Go back to the previous screen
                  Get.snackbar('Success', 'Product added successfully!');
                }).catchError((e) {
                  Get.snackbar('Error', 'Failed to add product: $e');
                });
              },
              child: const Text('Add Product'),
            ),
          ],
        ),
      ),
    );
  }
}
